from qgis.core import QgsMessageLog, Qgis

logging = True
validator_name = "üëë–ì–æ–ª–æ–≤–Ω–∏–π –í–∞–ª—ñ–¥–∞—Ç–æ—Äüëë"

def get_desktop_path():
    import os, platform , ctypes
    system = platform.system()
    
    if system == "Windows":
        # –î–ª—è –≤—Ä–∞—Ö—É–≤–∞–Ω–Ω—è OneDrive —Ç–∞ –ª–æ–∫–∞–ª—ñ–∑–∞—Ü—ñ—ó
        try:
            # –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ API Windows –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ —à–ª—è—Ö—É
            csidl_desktop = 0x0000  # CSIDL_DESKTOP
            path = ctypes.create_unicode_buffer(512)
            ctypes.windll.shell32.SHGetFolderPathW(None, csidl_desktop, None, 0, path)
            return path.value
        except Exception as e:
            print(f"Error retrieving desktop path on Windows: {e}")
            return os.path.join(os.environ['USERPROFILE'], 'Desktop')
    
    elif system == "Linux":
        return os.path.join(os.environ['HOME'], 'Desktop')
    
    else:
        raise NotImplementedError(f"Unsupported OS: {system}")



def log(text: str, level: int = Qgis.Info) -> None:
    if logging:
        QgsMessageLog.logMessage(
            message = text, 
            tag = validator_name, 
            level = level)

def save_dict_as_file(dictionary: dict, file_name: str, file_path: str = None) -> None:
    """
    –ó–±–µ—Ä–µ–≥—Ç–∏ —Å–ª–æ–≤–Ω–∏–∫ —É —Ñ–∞–π–ª.
    
    :param dictionary: —Å–ª–æ–≤–Ω–∏–∫, —è–∫–∏–π –ø–æ—Ç—Ä—ñ–±–Ω–æ –∑–±–µ—Ä–µ–≥—Ç–∏
    :param file_name: —ñ–º'—è —Ñ–∞–π–ª—É, —É —è–∫–∏–π –ø–æ—Ç—Ä—ñ–±–Ω–æ –∑–±–µ—Ä–µ–≥—Ç–∏ —Å–ª–æ–≤–Ω–∏–∫
    :param file_path: —à–ª—è—Ö –¥–æ –ø–∞–ø–∫–∏, —É —è–∫—É –ø–æ—Ç—Ä—ñ–±–Ω–æ –∑–±–µ—Ä–µ–≥—Ç–∏ —Ñ–∞–π–ª.
                      –Ø–∫—â–æ –Ω–µ –≤–∫–∞–∑–∞–Ω–æ, —Ç–æ –±—É–¥–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏—Å—è —à–ª—è—Ö –¥–æ —Å—Ç—ñ–ª—å–Ω–∏—Ü—ñ.
    """
    import json, os
    
    if file_path is None:
        file_path = os.path.join(get_desktop_path(), f"{file_name}.json")
    else:
        file_path = os.path.join(file_path, f"{file_name}.json")
    
    with open(file_path, 'w') as file:
        json.dump(dictionary, file, indent=4, ensure_ascii=False)